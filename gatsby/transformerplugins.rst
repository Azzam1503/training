Transformer plugins
===================

In previous chapter we learned how to get data from sources with `source plugins`.
The data fetched by this plugin culd have a lot of informations, but often isn't in a good format
to build our pages.

For example if we want to build a blog and use Markdown files as our data for every blogpost, the previous plugin is useful to retrieve
the list of posts (our *md files) but we can't use the text inside of them to create our site pages.

`Transformer plugins` are used for this purpose: they take raw content from source plugins and transform it into something more usable.

First of all, let's create some files inside a new folder `blogposts`:

.. code-block:: none

  src/blogposts/ploneconf_trainings.md
  
  ---
  title: "Ploneconf 2019 trainings"
  date: "2018-11-05"
  ---

  The first two days of Ploneconf 2018 are dedicated to trainings.

  There are a lot of interesting trainings, but the best is the Gatsby one.

  
  src/blogposts/ploneconf_talks.md
  
  ---
  title: "Ploneconf 2019 talks"
  date: "2018-11-07"
  ---

  From 7 to 9 November there will be a lot of interesting talks about Plone and web development.

  There will be also cool t-shirts and a party!

If we try to go back to our `files-list` page, we'll se that 2 new files are listed. But we still don't have the right informations.

To get more informations to be queried (for example the title of the blogposts or their text), let's add a new plugin:

.. code-block:: console

  npm install --save gatsby-transformer-remark

And add it into our `gatsby-config.js` file in the plugins list:

.. code.block:: none

  ...
  plugins: [
    ...
    'gatsby-transformer-remark',
    ...
  ]
  ...

This plugins reads all the files generated by the `gatsby-source-filesystem` plugin, and extract data from the items that he can handle (Markdown files for example),
generating new nodes in our GraphQL model with more useful metadata.

Let's try to restart our server and see what's new in GraphiQL queries: there are two new available queries: `allMarkdownRemark` and `markDownRemark`.

Exercise
++++++++

We want to create a blog, so we need to edit our `pages/index.js` to list all blogposts.

You need to provide these informations:

- total number of posts
- for each post: title, date and description

Hints: try to play a bit with the `allMarkdownRemark` query and see how to retrieve all required informations.

..  admonition:: Solution
    :class: toggle

    .. code-block:: none

      import React from "react"
      import { graphql } from "gatsby"
      import Header from '../components/header';

      export default ({ data }) => {
        return (
          <div>
            <Header />
            <h1>A blog about The conference</h1>
            <h4>{data.allMarkdownRemark.totalCount} Posts</h4>
            {data.allMarkdownRemark.edges.map(({ node }) => (
              <div key={node.id}>
                <h3>
                  {node.frontmatter.title}{" "}
                  <span>
                    â€” {node.frontmatter.date}
                  </span>
                </h3>
                <p>{node.excerpt}</p>
              </div>
            ))}
          </div>
        )
      }

      export const query = graphql`
        query {
          allMarkdownRemark {
            totalCount
            edges {
              node {
                id
                frontmatter {
                  title
                  date(formatString: "DD MMMM, YYYY")
                }
                excerpt
              }
            }
          }
        }
      `